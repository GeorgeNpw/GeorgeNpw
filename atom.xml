<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>GeorgeN的博客</title>
  
  <subtitle>宁静致远</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-04-25T14:55:03.903Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>npw</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Github+Hexo搭建个人博客</title>
    <link href="http://yoursite.com/2019/04/25/Github-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://yoursite.com/2019/04/25/Github-Hexo搭建个人博客/</id>
    <published>2019-04-25T14:45:23.000Z</published>
    <updated>2019-04-25T14:55:03.903Z</updated>
    
    <content type="html"><![CDATA[<p>如果你也想要跟我一样自己撘一个个人博客系统，但又不知道怎么做，那么恭喜你！看完这篇文章，你也可以像我一样搭建一个属于自己的博客了！Come on！</p><p>&lt; !–more–&gt;</p><h1 id="准备环境"><a href="#准备环境" class="headerlink" title="准备环境"></a>准备环境</h1><ol><li>安装 Node</li><li>安装 Git</li><li>注册 GitHub</li><li>安装 Hexo</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 npm install hexo-cli -g</span><br></pre></td></tr></table></figure><h1 id="搭建本地个人博客"><a href="#搭建本地个人博客" class="headerlink" title="搭建本地个人博客"></a>搭建本地个人博客</h1><hr><h2 id="初始化-hexo"><a href="#初始化-hexo" class="headerlink" title="初始化 hexo"></a>初始化 hexo</h2><ul><li><p>新建一个空白文件夹（下文提到的“项目根目录”是指你新建的文件夹的位置）用于存放 hexo 资源。在空白文件夹里面打开 Git Bash ，输入下列命令行进行初始化。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 hexo init</span><br></pre></td></tr></table></figure><h2 id="生成静态页面"><a href="#生成静态页面" class="headerlink" title="生成静态页面"></a>生成静态页面</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 hexo g</span><br></pre></td></tr></table></figure><h2 id="启动本地服务"><a href="#启动本地服务" class="headerlink" title="启动本地服务"></a>启动本地服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 hexo s</span><br></pre></td></tr></table></figure></li><li><p>关闭本地服务器在 Git Bash 界面按 Ctrl+C， 在浏览器输入：<a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a> 查看<br><img src="http://ww1.sinaimg.cn/large/006pqaYvgy1g2f6zotc21j30m80fhqa3.jpg"></p><h1 id="美化个人博客"><a href="#美化个人博客" class="headerlink" title="美化个人博客"></a>美化个人博客</h1></li></ul><hr><h2 id="博客主题设置"><a href="#博客主题设置" class="headerlink" title="博客主题设置"></a>博客主题设置</h2><h3 id="克隆主题"><a href="#克隆主题" class="headerlink" title="克隆主题"></a>克隆主题</h3><ul><li>在项目根目录下的 <strong>themes</strong> 文件中，打开 <strong>Git Bash</strong> ，用命令行克隆下新的主题。我这里用的 <strong>Next</strong> 主题，需要其他主题的自己百度找。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next.git</span><br></pre></td></tr></table></figure><h3 id="配置主题"><a href="#配置主题" class="headerlink" title="配置主题"></a>配置主题</h3><ul><li>用文本的方式打开项目根目录下的 <font color="#DC143C">_config.yml</font> 配置文件，找到 <strong>theme</strong> 把原来默认的 <strong><del>landscape</del> </strong> 主题名字，改成刚刚克隆的主题名字。</li></ul><h3 id="测试主题"><a href="#测试主题" class="headerlink" title="测试主题"></a>测试主题</h3><ul><li><p>重新回到项目根目录下，打开 Git Bath ，用命令行启动服务器。在浏览器访问 <a href="http://localhost:4000" target="_blank" rel="noopener">http://localhost:4000</a><br><img src="http://ww1.sinaimg.cn/large/006pqaYvgy1g2f72ii44vj30m80cg41j.jpg" alt=""></p><h3 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h3></li><li><p><strong>方法一：</strong>在项目根目录下，打开 <strong>Git Bash</strong> ，执行新建命令，然后 hexo 会自动在指定目录下生成对应文件，如下图所示。然后找到新建好的文件，打开即可进行编辑。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 hexo new <span class="string">"此处输入文章名字"</span></span><br></pre></td></tr></table></figure></li><li><p><strong>方法二：</strong>可以直接把已经准备的 md 格式的文章复制到 项目名称  <font color="#DC143C">/source/_posts</font> 目录下，然后打开文件，在文件头加入 front-matter 部分，title 表示文章标题，date 表示发布时间。如图所示，图片上用到的其他参数，后面会介绍到。</p></li><li><font color="#DC143C"><strong>重要的事情说三遍！！！</strong></font></li><li>front-matte 书写的时候要注意，冒号后面要跟一个空格号</li><li>front-matte 书写的时候要注意，冒号后面要跟一个空格号</li><li><p>front-matte 书写的时候要注意，冒号后面要跟一个空格号</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 ---</span><br><span class="line">2 title: a</span><br><span class="line">3 date: 2019-04-25 21:27:13</span><br><span class="line">4 ---</span><br></pre></td></tr></table></figure></li><li><p>准备好 md 格式文件后，使用下面命令生成网站静态文件到默认设置的 public 文件夹，然后再启动本地服务器。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 hexo g</span><br></pre></td></tr></table></figure></li></ul><h2 id="主题风格设置"><a href="#主题风格设置" class="headerlink" title="主题风格设置"></a>主题风格设置</h2><ul><li>打开主题文件夹下的  <font color="#DC143C">_config.yml</font> 配置文件（注意：这里要区别，不是項目根目录，主题文件夹的路径为：<font color="#DC143C">新建空白文件夹名称/themes/主题文件夹名称</font>）。通过查找功能找到 Schemes 模块，修改为 Gemini 风格。如果喜欢其他风格可以自己修改。</li><li>刷新页面可以看到新风格的界面如下图所示:<br><img src="http://ww1.sinaimg.cn/large/006pqaYvgy1g2f7f8og8pj30m80avtc0.jpg" alt=""><h2 id="博客左侧栏设置"><a href="#博客左侧栏设置" class="headerlink" title="博客左侧栏设置"></a>博客左侧栏设置</h2></li><li>在上面的网站界面，可以发现网站的文字是英文，只要修改一下语言模式即可。打开根目录文件夹下的  <font color="#DC143C">_config.yml</font>配置文件。找到 language，设置为 <strong>zh-CN</strong>。标题等其他参数的设置如下。可以对照效果图的具体位置，根据自己的实际需求进行修改。（注意：修改了项目根目录下的  <font color="#DC143C">_config.yml</font>配置文件，需要重启部署项目后才能生效）<h2 id="分类设置"><a href="#分类设置" class="headerlink" title="分类设置"></a>分类设置</h2><h3 id="添加分类列表"><a href="#添加分类列表" class="headerlink" title="添加分类列表"></a>添加分类列表</h3></li><li><p>在项目根目录下，执行下面的命令行，新建分类页面，然后会在项目根目录下的 <strong>source</strong> 文件夹中新建一个 <strong>categories</strong> 文件夹。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 hexo new page categories</span><br></pre></td></tr></table></figure></li><li><p>打开 <strong>categories</strong> 文件夹中的 <strong>index.md</strong> 文件，添加 type 字段，设置为 “<strong>categories</strong>”。如下图所示。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1 ---</span><br><span class="line">2 title: categories</span><br><span class="line">3 date: 2019-04-25 22:17:14</span><br><span class="line">4 <span class="built_in">type</span>: <span class="string">"categories"</span></span><br><span class="line">5 ---</span><br></pre></td></tr></table></figure></li><li><p>接着到主题文件夹下的<font color="#DC143C">_config.yml</font> 配置文件下，找到 <strong>menu</strong> 模块，把 <strong>categories</strong> 的注释给去掉。</p></li><li>刷新页面（如果刷新没效果，可以重启服务），可以在页面左侧栏上看到多了一个“分类”列表。<h3 id="如何将文章添加到对应分类？"><a href="#如何将文章添加到对应分类？" class="headerlink" title="如何将文章添加到对应分类？"></a>如何将文章添加到对应分类？</h3></li><li>文章发布前，在<font color="#DC143C"> front-matter</font> 部分，多写一个 <strong>categories</strong> 字段，然后参数写上类别的名称，保存后重启服务，在网页上点击“分类”，可以看到分类下已经生成了刚刚设置的类别，并把刚刚发布的文章归类在此类别下。如下图所示<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1 ---</span><br><span class="line">2 title: <span class="string">"文章的标题"</span></span><br><span class="line">3 date: 2019-04-25 22:17:14</span><br><span class="line">4 categories: <span class="string">"文章的分类"</span></span><br><span class="line">5 ---</span><br></pre></td></tr></table></figure></li></ul><h2 id="标签设置"><a href="#标签设置" class="headerlink" title="标签设置"></a>标签设置</h2><ul><li>方法跟分类设置一样，所以不再赘述介绍</li><li>但是需要补充一点， <font color="#DC143C"> front-matter</font> 中字段有多个参数的时候，可以使用如下图的写法。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">1 ---</span><br><span class="line">2 title: <span class="string">"文章的标题"</span></span><br><span class="line">3 date: 2019-04-25 22:17:14</span><br><span class="line">4 categories: <span class="string">"文章的分类"</span></span><br><span class="line">5 tags: </span><br><span class="line">6   -<span class="string">"标签1"</span></span><br><span class="line">7   -<span class="string">"标签2"</span></span><br><span class="line">8   -<span class="string">"标签3"</span></span><br><span class="line">9 description: <span class="string">"描述"</span></span><br><span class="line">10 photos: </span><br><span class="line">11   -<span class="string">"链接"</span></span><br><span class="line">12 ---</span><br></pre></td></tr></table></figure></li></ul><h2 id="博客添加站内搜索"><a href="#博客添加站内搜索" class="headerlink" title="博客添加站内搜索"></a>博客添加站内搜索</h2><ul><li>NexT主题支持集成 Swiftype、 微搜索、Local Search 和 Algolia。下面介绍 <strong>Local Search</strong> 的安装吧。注意：安装的时候要是项目根目录下安装。</li><li><p>安装 hexo-generator-search</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure></li><li><p>安装 hexo-generator-searchdb</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure></li><li><p>在项目根目录下的 <font color="#DC143C">_config.yml </font>配置文件的文末添加下面这段代码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1 search:</span><br><span class="line">2   path: search.xml</span><br><span class="line">3   field: post</span><br><span class="line">4   format: html</span><br><span class="line">5   <span class="built_in">limit</span>: 10000</span><br></pre></td></tr></table></figure></li><li><p>编辑主题文件夹的 <font color="#DC143C">_config.yml </font> 配置文件，设置<font color="#DC143C"> Local searchenable </font>为 <strong>ture</strong>。</p></li><li>重启服务<h2 id="博客头像设置"><a href="#博客头像设置" class="headerlink" title="博客头像设置"></a>博客头像设置</h2><h3 id="添加博客头像"><a href="#添加博客头像" class="headerlink" title="添加博客头像"></a>添加博客头像</h3></li><li>打开主题文件夹下的 <font color="#DC143C">_config.yml </font> 配置文件，通过查找功能找到 <strong>avatar</strong>，然后把一个在线的头像图片地址（百度图片中直接复制链接即可），作为 <strong>url</strong> 的参数。</li><li>然后刷新页面，可以看到网站上已经显示了相应的头像了。<h2 id="右上角-fork-me-设置"><a href="#右上角-fork-me-设置" class="headerlink" title="右上角 fork me 设置"></a>右上角 fork me 设置</h2></li><li>在 <a href="http://tholman.com/github-corners/" target="_blank" rel="noopener">GitHub Corners</a> 上选择你喜欢的挂饰，复制方框内的代码。</li><li>打开主题文件夹下的 <strong>layout</strong> 文件夹，用记事本的方式打开 <strong>_layout.swig</strong>，把刚刚复制的代码放到下面，并把 href 的参数，修改为自己的 github 链接（放自己要跳转的网址即可）。</li><li>重启服务器，查看效果<h2 id="网页背景设置"><a href="#网页背景设置" class="headerlink" title="网页背景设置"></a>网页背景设置</h2><h3 id="动态背景设置"><a href="#动态背景设置" class="headerlink" title="动态背景设置"></a>动态背景设置</h3></li><li>打开主题文件夹下的 <strong>layout</strong> 文件夹，用文本的方式打开 <strong>_layout.swig</strong> 文件，在文末加上如下的代码：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 &lt;!-- 动态背景 --&gt;</span><br><span class="line">2 &lt;script <span class="built_in">type</span>=<span class="string">"text/javascript"</span> src=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure></li></ul><h3 id="背景图片设置"><a href="#背景图片设置" class="headerlink" title="背景图片设置"></a>背景图片设置</h3><ul><li>打开主题文件夹下的 <strong>source</strong> 文件夹，进入 <strong>css/_custom</strong> 文件下，用文本形式打开 <strong>custom.styl</strong> 文件，然后添加下面这段代码。代码中 <strong>url</strong> 的地址是指到： <font color="#DC143C">主题文件夹/source/images/</font> 。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">1 body&#123;</span><br><span class="line">2    background:url(/images/bg.jpg);</span><br><span class="line">3    background-size:cover;</span><br><span class="line">4    background-repeat:no-repeat;</span><br><span class="line">5    background-attachment:fixed;</span><br><span class="line">6    background-position:center;</span><br><span class="line">7    // 设置主题部分的透明度，具体看图</span><br><span class="line">8    opacity: 0.8;</span><br><span class="line">9 &#125;</span><br></pre></td></tr></table></figure></li></ul><h2 id="首页文章预览设置"><a href="#首页文章预览设置" class="headerlink" title="首页文章预览设置"></a>首页文章预览设置</h2><ul><li>默认情况下，文章在首页是全文显示的，这样肯定是不方便读者浏览。所以需要实现预览模式。</li><li><strong>方法一：</strong>使用 <strong>&lt; !–more–&gt;</strong> 手动切断<br>这种方法可以根据文章的内容，自己在合适的位置添加 &lt; !–more–&gt; 标签，使用灵活，也是Hexo推荐的方法。</li><li><strong>方法二：</strong>添加 <strong>description</strong><br>在文章的<font color="#DC143C"> front-matter </font>中添加 <strong>description</strong> 和 <strong>photos</strong> 字段，如3.5图所示。如果不需要显示图片的话，可以把 photos 去掉。<br>ps：不知道 <font color="#DC143C"> front-matter </font> 是什么的话，跳转到第二章的第4点的发布文章看下。</li><li><strong>方法三</strong>：自动形成摘要<br>在主题文件下的<font color="#DC143C">_config.yml </font> 配置文件中添加默认截取的长度为 150 字符，可以根据需要自行设定。<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 auto_excerpt:</span><br><span class="line">2   <span class="built_in">enable</span>: <span class="literal">true</span></span><br><span class="line">3   length: 150</span><br></pre></td></tr></table></figure></li></ul><h2 id="RSS-设置"><a href="#RSS-设置" class="headerlink" title="RSS 设置"></a>RSS 设置</h2><ul><li><p>安装 hexo 插件，需要在 hexo 项目根目录下进行安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 npm install --save hexo-generator-feed</span><br></pre></td></tr></table></figure></li><li><p>安装完成后在项目根目录下的 <font color="#DC143C">_config.yml </font> 配置文件的文末添加下面这段代码：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1 <span class="comment"># Extentions</span></span><br><span class="line">2 <span class="comment">## Plugins: http://hexo.io/plugins/</span></span><br><span class="line">3 plugins: hexo-generator-feed</span><br></pre></td></tr></table></figure></li><li><p>在主题文件夹下的 <font color="#DC143C">_config.yml </font>  配置文件中，找到 <strong>rss</strong> ，在后面加上 <strong>/atom.xml</strong>。</p></li><li>重启服务，刷新页面<h2 id="社交小图标设置"><a href="#社交小图标设置" class="headerlink" title="社交小图标设置"></a>社交小图标设置</h2></li><li>在主题文件夹下的<font color="#DC143C">_config.yml </font>配置文件中，搜索 <strong>Social</strong>，然后提示自己增加自己需要的小图标并设置对应连接。</li><li>图标可以到 <a href="https://fontawesome.com/icons?from=io" target="_blank" rel="noopener">Font Awesome Icon</a> 网站查找。<h2 id="友情链接设置"><a href="#友情链接设置" class="headerlink" title="友情链接设置"></a>友情链接设置</h2></li><li>在主题文件夹下的 <font color="#DC143C">_config.yml </font>配置文件中，搜索 links_title，然后根据自己的需求自己吸修改。<h2 id="博客置顶设置"><a href="#博客置顶设置" class="headerlink" title="博客置顶设置"></a>博客置顶设置</h2></li><li><p>安装插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 npm uninstall hexo-generator-index --save</span><br><span class="line">2 npm install hexo-generator-index-pin-top --save</span><br></pre></td></tr></table></figure></li><li><p>然后在需要置顶的文章的 <strong>Front-matter</strong> 中加上 <strong>top</strong> 即可，数值越大表示等级越高，越靠前显示。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1 ---</span><br><span class="line">2 title: <span class="string">"文章的标题"</span></span><br><span class="line">3 date: 2019-04-25 22:17:14</span><br><span class="line">4 top: 100</span><br><span class="line">5 ---</span><br></pre></td></tr></table></figure></li><li><p>在主题文件夹中打开<font color="#DC143C"> layout/_macro/post.swig</font> 文件，定位到 <strong>post-header</strong> ，把下面的代码添加进去即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1 &#123;% <span class="keyword">if</span> post.top %&#125;</span><br><span class="line">2  &lt;i class=<span class="string">"fa fa-thumb-tack"</span>&gt;&lt;/i&gt;</span><br><span class="line">3   &lt;font color=7D26CD&gt;置顶&lt;/font&gt;</span><br><span class="line">4 &#123;% endif %&#125;</span><br></pre></td></tr></table></figure></li></ul><h1 id="对接Github的远程仓库"><a href="#对接Github的远程仓库" class="headerlink" title="对接Github的远程仓库"></a>对接Github的远程仓库</h1><hr><ul><li>在Github创建一个公有仓库，并把公有仓库的链接保存下来。<br>注意：仓库名字必须是：username.github.io，其中username是你的用户名。</li><li>打开项目根目录下的 <font color="#DC143C">_config.yml </font> 配置文件，修改 <strong>deploy</strong> 的值。<strong>tpye</strong> 设置为 <strong>git</strong>，<strong>repo</strong> 则设置为刚刚新建的远程仓库链接。</li><li><font color="#DC143C">注意：冒号后面需要再加一个空格，不然会出现格式错误。</font> </li><li><p>安装hexo-deployer-gi</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1 npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li><p>一键部署到远程仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1 hexo g</span><br><span class="line">2 hexo deploy</span><br></pre></td></tr></table></figure></li><li><p>回到刚刚新建的远程仓库，刷新页面，可以发现本地博客的相关文件已经全部部署到远程仓库上了。</p><h1 id="常用hexo命令"><a href="#常用hexo命令" class="headerlink" title="常用hexo命令"></a>常用hexo命令</h1></li></ul><hr><ul><li><p>常见命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">hexo new <span class="string">"postName"</span> <span class="comment">#新建文章</span></span><br><span class="line">hexo new page <span class="string">"pageName"</span> <span class="comment">#新建页面</span></span><br><span class="line">hexo generate <span class="comment">#生成静态页面至public目录</span></span><br><span class="line">hexo server <span class="comment">#开启预览访问端口（默认端口4000，'ctrl + c'关闭server）</span></span><br><span class="line">hexo deploy <span class="comment">#部署到GitHub</span></span><br><span class="line">hexo <span class="built_in">help</span>  <span class="comment"># 查看帮助</span></span><br><span class="line">hexo version  <span class="comment">#查看Hexo的版本</span></span><br></pre></td></tr></table></figure></li><li><p>缩写：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">hexo n == hexo new</span><br><span class="line">hexo g == hexo generate</span><br><span class="line">hexo s == hexo server</span><br><span class="line">hexo d == hexo deploy</span><br></pre></td></tr></table></figure></li><li><p>组合命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo s -g <span class="comment">#生成并本地预览</span></span><br><span class="line">hexo d -g <span class="comment">#生成并上传</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="本文参考链接"><a href="#本文参考链接" class="headerlink" title="本文参考链接"></a>本文参考链接</h1><hr><p><a href="https://www.jianshu.com/p/13f5e4d7099d" target="_blank" rel="noopener">https://www.jianshu.com/p/13f5e4d7099d</a></p><p><a href="http://theme-next.iissnan.com/theme-settings.html#rss" target="_blank" rel="noopener">http://theme-next.iissnan.com/theme-settings.html#rss</a></p><p><a href="https://www.jianshu.com/p/9f0e90cc32c2" target="_blank" rel="noopener">https://www.jianshu.com/p/9f0e90cc32c2</a></p><p><a href="https://www.simon96.online/2018/10/12/hexo-tutorial/" target="_blank" rel="noopener">https://www.simon96.online/2018/10/12/hexo-tutorial/</a></p><p><a href="http://zwd596257180.gitee.io/blog/2019/04/15/hexo_manong_bog/" target="_blank" rel="noopener">http://zwd596257180.gitee.io/blog/2019/04/15/hexo_manong_bog/</a></p><p><a href="https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html" target="_blank" rel="noopener">https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;如果你也想要跟我一样自己撘一个个人博客系统，但又不知道怎么做，那么恭喜你！看完这篇文章，你也可以像我一样搭建一个属于自己的博客了！Come on！&lt;/p&gt;
&lt;p&gt;&amp;lt; !–more–&amp;gt;&lt;/p&gt;
&lt;h1 id=&quot;准备环境&quot;&gt;&lt;a href=&quot;#准备环境&quot; class
      
    
    </summary>
    
      <category term="Hexo" scheme="http://yoursite.com/categories/Hexo/"/>
    
    
      <category term="博客搭建" scheme="http://yoursite.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2018/10/10/hello-world/"/>
    <id>http://yoursite.com/2018/10/10/hello-world/</id>
    <published>2018-10-10T03:09:27.515Z</published>
    <updated>2019-04-25T14:46:02.454Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
      
    
    </summary>
    
    
  </entry>
  
</feed>
