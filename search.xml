<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Github+Hexo搭建个人博客]]></title>
    <url>%2F2019%2F04%2F25%2FGithub-Hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[如果你也想要跟我一样自己撘一个个人博客系统，但又不知道怎么做，那么恭喜你！看完这篇文章，你也可以像我一样搭建一个属于自己的博客了！Come on！ &lt; !–more–&gt; 准备环境 安装 Node 安装 Git 注册 GitHub 安装 Hexo 11 npm install hexo-cli -g 搭建本地个人博客 初始化 hexo 新建一个空白文件夹（下文提到的“项目根目录”是指你新建的文件夹的位置）用于存放 hexo 资源。在空白文件夹里面打开 Git Bash ，输入下列命令行进行初始化。 11 hexo init 生成静态页面11 hexo g 启动本地服务11 hexo s 关闭本地服务器在 Git Bash 界面按 Ctrl+C， 在浏览器输入：http://localhost:4000 查看 美化个人博客 博客主题设置克隆主题 在项目根目录下的 themes 文件中，打开 Git Bash ，用命令行克隆下新的主题。我这里用的 Next 主题，需要其他主题的自己百度找。 11 git clone https://github.com/theme-next/hexo-theme-next.git 配置主题 用文本的方式打开项目根目录下的 _config.yml 配置文件，找到 theme 把原来默认的 landscape 主题名字，改成刚刚克隆的主题名字。 测试主题 重新回到项目根目录下，打开 Git Bath ，用命令行启动服务器。在浏览器访问 http://localhost:4000 发布文章 方法一：在项目根目录下，打开 Git Bash ，执行新建命令，然后 hexo 会自动在指定目录下生成对应文件，如下图所示。然后找到新建好的文件，打开即可进行编辑。 11 hexo new "此处输入文章名字" 方法二：可以直接把已经准备的 md 格式的文章复制到 项目名称 /source/_posts 目录下，然后打开文件，在文件头加入 front-matter 部分，title 表示文章标题，date 表示发布时间。如图所示，图片上用到的其他参数，后面会介绍到。 重要的事情说三遍！！！ front-matte 书写的时候要注意，冒号后面要跟一个空格号 front-matte 书写的时候要注意，冒号后面要跟一个空格号 front-matte 书写的时候要注意，冒号后面要跟一个空格号 12341 ---2 title: a3 date: 2019-04-25 21:27:134 --- 准备好 md 格式文件后，使用下面命令生成网站静态文件到默认设置的 public 文件夹，然后再启动本地服务器。 11 hexo g 主题风格设置 打开主题文件夹下的 _config.yml 配置文件（注意：这里要区别，不是項目根目录，主题文件夹的路径为：新建空白文件夹名称/themes/主题文件夹名称）。通过查找功能找到 Schemes 模块，修改为 Gemini 风格。如果喜欢其他风格可以自己修改。 刷新页面可以看到新风格的界面如下图所示:博客左侧栏设置 在上面的网站界面，可以发现网站的文字是英文，只要修改一下语言模式即可。打开根目录文件夹下的 _config.yml配置文件。找到 language，设置为 zh-CN。标题等其他参数的设置如下。可以对照效果图的具体位置，根据自己的实际需求进行修改。（注意：修改了项目根目录下的 _config.yml配置文件，需要重启部署项目后才能生效）分类设置添加分类列表 在项目根目录下，执行下面的命令行，新建分类页面，然后会在项目根目录下的 source 文件夹中新建一个 categories 文件夹。 11 hexo new page categories 打开 categories 文件夹中的 index.md 文件，添加 type 字段，设置为 “categories”。如下图所示。 123451 ---2 title: categories3 date: 2019-04-25 22:17:144 type: "categories"5 --- 接着到主题文件夹下的_config.yml 配置文件下，找到 menu 模块，把 categories 的注释给去掉。 刷新页面（如果刷新没效果，可以重启服务），可以在页面左侧栏上看到多了一个“分类”列表。如何将文章添加到对应分类？ 文章发布前，在 front-matter 部分，多写一个 categories 字段，然后参数写上类别的名称，保存后重启服务，在网页上点击“分类”，可以看到分类下已经生成了刚刚设置的类别，并把刚刚发布的文章归类在此类别下。如下图所示123451 ---2 title: "文章的标题"3 date: 2019-04-25 22:17:144 categories: "文章的分类"5 --- 标签设置 方法跟分类设置一样，所以不再赘述介绍 但是需要补充一点， front-matter 中字段有多个参数的时候，可以使用如下图的写法。1234567891011121 ---2 title: "文章的标题"3 date: 2019-04-25 22:17:144 categories: "文章的分类"5 tags: 6 -"标签1"7 -"标签2"8 -"标签3"9 description: "描述"10 photos: 11 -"链接"12 --- 博客添加站内搜索 NexT主题支持集成 Swiftype、 微搜索、Local Search 和 Algolia。下面介绍 Local Search 的安装吧。注意：安装的时候要是项目根目录下安装。 安装 hexo-generator-search 11 npm install hexo-generator-search --save 安装 hexo-generator-searchdb 11 npm install hexo-generator-searchdb --save 在项目根目录下的 _config.yml 配置文件的文末添加下面这段代码。 123451 search:2 path: search.xml3 field: post4 format: html5 limit: 10000 编辑主题文件夹的 _config.yml 配置文件，设置 Local searchenable 为 ture。 重启服务博客头像设置添加博客头像 打开主题文件夹下的 _config.yml 配置文件，通过查找功能找到 avatar，然后把一个在线的头像图片地址（百度图片中直接复制链接即可），作为 url 的参数。 然后刷新页面，可以看到网站上已经显示了相应的头像了。右上角 fork me 设置 在 GitHub Corners 上选择你喜欢的挂饰，复制方框内的代码。 打开主题文件夹下的 layout 文件夹，用记事本的方式打开 _layout.swig，把刚刚复制的代码放到下面，并把 href 的参数，修改为自己的 github 链接（放自己要跳转的网址即可）。 重启服务器，查看效果网页背景设置动态背景设置 打开主题文件夹下的 layout 文件夹，用文本的方式打开 _layout.swig 文件，在文末加上如下的代码：121 &lt;!-- 动态背景 --&gt;2 &lt;script type="text/javascript" src="//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"&gt;&lt;/script&gt; 背景图片设置 打开主题文件夹下的 source 文件夹，进入 css/_custom 文件下，用文本形式打开 custom.styl 文件，然后添加下面这段代码。代码中 url 的地址是指到： 主题文件夹/source/images/ 。1234567891 body&#123;2 background:url(/images/bg.jpg);3 background-size:cover;4 background-repeat:no-repeat;5 background-attachment:fixed;6 background-position:center;7 // 设置主题部分的透明度，具体看图8 opacity: 0.8;9 &#125; 首页文章预览设置 默认情况下，文章在首页是全文显示的，这样肯定是不方便读者浏览。所以需要实现预览模式。 方法一：使用 &lt; !–more–&gt; 手动切断这种方法可以根据文章的内容，自己在合适的位置添加 &lt; !–more–&gt; 标签，使用灵活，也是Hexo推荐的方法。 方法二：添加 description在文章的 front-matter 中添加 description 和 photos 字段，如3.5图所示。如果不需要显示图片的话，可以把 photos 去掉。ps：不知道 front-matter 是什么的话，跳转到第二章的第4点的发布文章看下。 方法三：自动形成摘要在主题文件下的_config.yml 配置文件中添加默认截取的长度为 150 字符，可以根据需要自行设定。1231 auto_excerpt:2 enable: true3 length: 150 RSS 设置 安装 hexo 插件，需要在 hexo 项目根目录下进行安装。 11 npm install --save hexo-generator-feed 安装完成后在项目根目录下的 _config.yml 配置文件的文末添加下面这段代码： 1231 # Extentions2 ## Plugins: http://hexo.io/plugins/3 plugins: hexo-generator-feed 在主题文件夹下的 _config.yml 配置文件中，找到 rss ，在后面加上 /atom.xml。 重启服务，刷新页面社交小图标设置 在主题文件夹下的_config.yml 配置文件中，搜索 Social，然后提示自己增加自己需要的小图标并设置对应连接。 图标可以到 Font Awesome Icon 网站查找。友情链接设置 在主题文件夹下的 _config.yml 配置文件中，搜索 links_title，然后根据自己的需求自己吸修改。博客置顶设置 安装插件 121 npm uninstall hexo-generator-index --save2 npm install hexo-generator-index-pin-top --save 然后在需要置顶的文章的 Front-matter 中加上 top 即可，数值越大表示等级越高，越靠前显示。 123451 ---2 title: "文章的标题"3 date: 2019-04-25 22:17:144 top: 1005 --- 在主题文件夹中打开 layout/_macro/post.swig 文件，定位到 post-header ，把下面的代码添加进去即可。 12341 &#123;% if post.top %&#125;2 &lt;i class="fa fa-thumb-tack"&gt;&lt;/i&gt;3 &lt;font color=7D26CD&gt;置顶&lt;/font&gt;4 &#123;% endif %&#125; 对接Github的远程仓库 在Github创建一个公有仓库，并把公有仓库的链接保存下来。注意：仓库名字必须是：username.github.io，其中username是你的用户名。 打开项目根目录下的 _config.yml 配置文件，修改 deploy 的值。tpye 设置为 git，repo 则设置为刚刚新建的远程仓库链接。 注意：冒号后面需要再加一个空格，不然会出现格式错误。 安装hexo-deployer-gi 11 npm install hexo-deployer-git --save 一键部署到远程仓库 121 hexo g2 hexo deploy 回到刚刚新建的远程仓库，刷新页面，可以发现本地博客的相关文件已经全部部署到远程仓库上了。 常用hexo命令 常见命令 1234567hexo new "postName" #新建文章hexo new page "pageName" #新建页面hexo generate #生成静态页面至public目录hexo server #开启预览访问端口（默认端口4000，'ctrl + c'关闭server）hexo deploy #部署到GitHubhexo help # 查看帮助hexo version #查看Hexo的版本 缩写： 1234hexo n == hexo newhexo g == hexo generatehexo s == hexo serverhexo d == hexo deploy 组合命令： 12hexo s -g #生成并本地预览hexo d -g #生成并上传 本文参考链接 https://www.jianshu.com/p/13f5e4d7099d http://theme-next.iissnan.com/theme-settings.html#rss https://www.jianshu.com/p/9f0e90cc32c2 https://www.simon96.online/2018/10/12/hexo-tutorial/ http://zwd596257180.gitee.io/blog/2019/04/15/hexo_manong_bog/ https://www.cnblogs.com/liuxianan/p/build-blog-website-by-hexo-github.html]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>博客搭建</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F10%2F10%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
